{"version":3,"sources":["components/Home.js","components/auth/auth-services.js","components/navigation/NavBar.js","components/Products/ProductAdd.js","components/Products/ProductList.js","components/Products/ProductDetail.js","components/Products/ProductUpdate.js","components/sales/SalesSearch.js","components/auth/Signup.js","components/auth/Login.js","components/auth/protected-route.js","components/dashboard/Dashboard.js","components/users/UserAdd.js","components/users/UserList.js","components/users/UserDetail.js","components/users/UserUpdate.js","components/reports/Reports.js","components/navigation/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","className","class","id","src","AuthService","signup","name","lastname","store","username","password","service","post","then","response","data","loggedin","get","login","logout","axios","create","baseURL","process","withCredentials","this","NavBar","logoutUser","getUser","userInSession","role","aria-label","href","alt","to","onClick","ProductAdd","useForm","register","errors","handleSubmit","onSubmit","user","getData","Swal","fire","title","icon","document","getElementById","reset","catch","err","console","log","status","text","confirmButtonText","type","ref","required","barcode","pattern","price","stock","ProductList","useState","listOfProducts","updateList","getAllProducts","useEffect","loggedInUser","colSpan","map","product","_id","ProductDetail","useParams","history","useHistory","singleProductState","updateSingleProductState","getSingleProduct","deleteProduct","delete","push","showCancelButton","confirmButtonColor","cancelButtonColor","result","value","ProductUpdate","formState","updateFormState","put","defaultValue","SaleSearch","search","searchState","updateSearchState","productList","setProductList","saleList","updateSalesList","total","updateTotal","res","sum","forEach","ele","subtotal","calculateTotal","key","newStock","quantity","event","preventDefault","filteredProduct","filter","length","newList","onChange","e","target","Object","assign","handleChange","placeholder","saleObj","sale","salesMan","Signup","error","minLength","Login","protectedRoute","Component","component","rest","render","pathname","state","from","location","Dashboard","UserAdd","UserList","listOfUsers","getAllUsers","UserDetail","singleUser","updatesingleUser","getSingleUser","UserUpdate","Reports","sales","updateSales","Date","startDate","setStartDate","totalDay","salesFiltered","convertedTime","createdAt","setHours","selected","date","Footer","App","setLoggedInUser","getTheUser","userObj","path","exact","SalesSearch","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a73b7d9b.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\n\nconst Home = props => {\n    return(\n        <Fragment>\n        <div className=\"hero-body\">\n            <div className=\"container has-text-centered\">\n                <h1 className=\"title\">\n                    Grow your retail faster with Kwik-E POS software\n                </h1>\n                <h2 className=\"subtitle\">\n                    Kwik-E POS is a leading retail POS software in the cloud with everything you need to run & grow your business.\n                </h2>\n            </div>\n        </div>\n\n        <div class=\"box cta\">\n            <p class=\"has-text-centered\">\n                <span class=\"tag is-primary\">Feature</span> User roles for differents tasks.\n            </p>\n        </div>\n        \n        <section className='container'>\n            <div className=\"columns features\">\n                <div className=\"column is-4\">\n                    <div className=\"card is-shady\" id='home-card'>\n                        <div className=\"card-image has-text-centered\">\n                            <img src='https://images.ctfassets.net/txhaodyqr481/IZHRO10qVci6pUdKOm31A/99ed7d74c8f7221becf37e016071ca39/shutterstock_687139360.jpg?fm=jpg&fl=progressive'/>\n                        </div>\n                        <div className=\"card-content\">\n                            <div className=\"content\">\n                                <h4>Controll your sales</h4>\n                                <p> Barcode implementation, organizing your products have never been easier.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"column is-4\">\n                    <div className=\"card is-shady\" id='home-card'>\n                        <div className=\"card-image has-text-centered\">\n                            <img src='https://h7f7z2r7.stackpathcdn.com/sites/default/files/images/articles/blakcstonemain.jpg'/>\n                        </div>\n                        <div className=\"card-content\">\n                            <div className=\"content\">\n                                <h4> Manage your inventory </h4>\n                                <p>Mantain your stock updated in real time.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"column is-4\">\n                    <div className=\"card is-shady\" id='home-card'>\n                        <div className=\"card-image has-text-centered\">\n                            <img src='https://cdn.aarp.net/content/dam/aarp/home-and-family/family-and-friends/2015-04/1140-Personal-Finance-101-esp.imgcache.revb75b936630f806a6f5a20e0e781f9873.jpg'/>\n                        </div>\n                        <div className=\"card-content\">\n                            <div className=\"content\">\n                                <h4> Keep track of your income </h4>\n                                <p>Generate daily reports of all your sales.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"intro column is-8 is-offset-2\" id='cfr'>\n                    <h2 className=\"title\">Perfect POS software for most retail stores</h2><br/>\n                    <p className=\"subtitle\">Kwik-E POS is perfect for .</p>\n                </div>\n        </section>\n        </Fragment>\n    )\n}\n\nexport default Home;","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (name, lastname, store, username, password) => {\n    return this.service.post('/signup', {name, lastname, store, username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n  \n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(response => response.data)\n  }\n\n}\n\nexport default AuthService;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport 'bulma/css/bulma.css';\nimport AuthService from '../auth/auth-services';\n\nconst NavBar = props => {\n\n    const service = new AuthService();\n\n    const logoutUser = () =>{\n        service.logout()\n        .then(() => {\n          props.getUser(null);  \n        })\n      }\n\n    if(props.userInSession){\n        switch(props.userInSession.role){\n            case 'admin':\n                return(\n                      <div className='container'>\n                        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                            <div className=\"navbar-brand\">\n                                <a className=\"navbar-item\" href=\"/\">\n                                    <img src=\"./images/logopos.png\" alt=\"Ironhack Point of Sale\"/>\n                                </a>\n                            </div>\n                \n                            <div className=\"navbar-menu\">\n                                <div className=\"navbar-start\">\n                                    <div className='navbar-item'><strong>{props.userInSession.name}'s Session</strong></div>\n                                    <Link className=\"navbar-item\" to='/dashboard'>Dashboard</Link>\n                                    <Link className=\"navbar-item\" to='/products'>Products</Link>\n                                    <Link className=\"navbar-item\" to='/sales'>Sales</Link>\n                                    <Link className=\"navbar-item\" to='/users'>Users</Link>\n                                    <Link className=\"navbar-item\" to='/reports'>Reports</Link>\n                                </div>\n                \n                                <div className=\"navbar-end\">\n                                    <div className=\"navbar-item\">\n                                        <div className=\"buttons\">\n                                            <button className=\"button is-danger\" onClick={logoutUser}>\n                                                Logout\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </nav>\n                  </div>\n                )\n            break;\n\n            case 'user':\n                return(\n            \n                    <div className='container'>\n                        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                            <div className=\"navbar-brand\">\n                                <a className=\"navbar-item\" href=\"/\">\n                                    <img src=\"./images/logopos.png\" alt=\"Ironhack Point of Sale\"/>\n                                </a>\n                            </div>\n                \n                            <div className=\"navbar-menu\">\n                                <div className=\"navbar-start\">\n                                    <div className='navbar-item'><strong>{props.userInSession.name}'s Session</strong></div>\n                                    <Link className=\"navbar-item\" to='/dashboard'>Dashboard</Link>\n                                    <Link className=\"navbar-item\" to='/products'>Products</Link>\n                                    <Link className=\"navbar-item\" to='/sales'>Sales</Link>\n                                </div>\n                \n                                <div className=\"navbar-end\">\n                                    <div className=\"navbar-item\">\n                                        <div className=\"buttons\">\n                                            <button className=\"button is-danger\" onClick={logoutUser}>\n                                                Logout\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </nav>\n                    </div>\n                )\n            break;\n\n        }\n    }\n    \n    else {\n        return(\n            <div className='container'>\n                <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                    <div className=\"navbar-brand\">\n                        <a className=\"navbar-item\" href=\"/\">\n                            <img src=\"./images/logopos.png\" alt=\"Ironhack Point of Sale\"/>\n                        </a>\n                    </div>\n        \n                    <div className=\"navbar-menu\">\n                        <div className=\"navbar-end\">\n                            <div className=\"navbar-item\">\n                                <div className=\"buttons\">\n                                    <Link className=\"button is-link is-inverted\" to='/login'>\n                                        Login\n                                    </Link>\n                                    <Link className=\"button is-link\" to='/signup'>\n                                        Signup\n                                    </Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n\n};\n export default NavBar;","import React, {useState} from 'react'\nimport axios from 'axios';\nimport 'bulma/css/bulma.css';\nimport { useForm } from 'react-hook-form'\nimport Swal from 'sweetalert2'\n\nconst ProductAdd = props =>{\n\n    // const [formState, updateFormState] = useState({\n    //     barcode:'',\n    //     name: '',\n    //     price: '',\n    //     stock: '',\n    //     store:props.user.store\n    // })\n\n    // const handleChange = (event) => {  \n    //     const { name, value } = event.target;\n    //     updateFormState(Object.assign({}, formState, {[name]: value}))\n    // }\n    const { register,errors, handleSubmit } = useForm()\n\n    const onSubmit = data => {\n        // event.preventDefault();\n        data.store=props.user.store\n        axios.post(`${process.env.REACT_APP_API_URL}/products/add`, data, {withCredentials:true})\n        .then( ()=>{\n            props.getData();\n            // updateFormState({\n            //     barcode:'',\n            //     name: '',\n            //     price: '',\n            //     stock: '',\n            //     store:props.user.store\n            // })\n            Swal.fire({\n                title: \"Product Created!\",\n                icon: 'success',\n            })\n            \n            document.getElementById(\"product-add-form\").reset();\n        })\n        .catch(err => {\n            console.log(err)\n            if(err.response.status===401){\n                Swal.fire({\n                    title:'Ups!',\n                    text:'Barcode already use',\n                    icon:'warning',\n                    confirmButtonText: 'Try another one'\n                })\n            }\n            else{\n                Swal.fire({\n                    title:'Error!',\n                    text:'Something went bad',\n                    icon:'error',\n                    confirmButtonText: 'Try again'\n                })  \n            }\n        })\n    }\n\n    return(\n        <form id='product-add-form' onSubmit={handleSubmit(onSubmit)} className='box'>\n            <div className=\"field\">\n                <label className=\"label\">Barcode</label>\n                <div class=\"control\">\n                    <input className=\"input\" \n                    name='barcode' \n                    type=\"text\" \n                    // value={formState.barcode} \n                    // onChange={e => handleChange(e)}\n                    ref={register({required:true})}\n                    />\n                    {errors.barcode && <p className='error-form'>A product barcode is required</p>}\n                </div>\n            </div>\n\n            <div className=\"field\">\n                <label className=\"label\">Name</label>\n                <div className=\"control\">\n                    <input className=\"input\" \n                    name='name' \n                    type=\"text\" \n                    // value={formState.name} \n                    // onChange={e => handleChange(e)} \n                    ref={register({required:true})}\n                    />\n                    {errors.name && <p className='error-form'>A product name is required</p>}\n                </div>\n            </div>\n\n            <div className=\"field\">\n                <label className=\"label\">Price</label>\n                <div className=\"control\">\n                    <input className=\"input\" \n                    name='price' \n                    type=\"text\" \n                    // value={formState.price} \n                    // onChange={e => handleChange(e)}\n                    ref={register({required:true, pattern:/[0-9]/})}\n                    />\n                    {errors.price?.type === \"required\" && <p className='error-form'>A price quantity is required</p>}\n                    {errors.price?.type === \"pattern\" && <p className='error-form'>Must be a number</p>}\n                </div>\n            </div>\n\n            <div className=\"field\">\n                <label className=\"label\">Stock</label>\n                <div className=\"control\">\n                    <input className=\"input\" \n                    name='stock' \n                    type=\"text\" \n                    // value={formState.stock} \n                    // onChange={e => handleChange(e)}\n                    ref={register({required:true,pattern:/[0-9]/})}\n                    />\n                    {errors.stock?.type === \"required\" && <p className='error-form'>A stock quantity is required</p>}\n                    {errors.stock?.type === \"pattern\" && <p className='error-form'>Must be a number</p>}\n                </div>\n            </div>\n\n            <div class=\"control\">\n                <button type='submit' className=\"button is-primary\">Add New</button>\n            </div>\n\n        </form>\n    )\n}\n\nexport default ProductAdd;","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport 'bulma/css/bulma.css';\nimport ProductAdd from './ProductAdd'\n\nconst ProductList = props =>{\n\n    const [listOfProducts, updateList] = useState([]);\n\n    const getAllProducts = () => {\n        axios.get(`${process.env.REACT_APP_API_URL}/products`, {withCredentials:true})\n        .then(response => {\n            updateList(response.data)\n        })\n        .catch(err => console.log(err))\n    }\n\n    useEffect( () => {\n        getAllProducts();\n    },[])\n\n    if(props.loggedInUser.role==='admin'){\n        return (\n            <div className='container'>\n                <div className='columns'>\n                    <div className='column' id='product-table'>\n                        <table className='table is-striped is-fullwidth'>\n                            <thead>\n                                <tr>\n                                    <th>Barcode</th>\n                                    <th>Name</th>\n                                    <th>Price</th>\n                                    <th>Stock</th>\n                                    <th colSpan='2'>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    listOfProducts.map(product => {\n                                        return(\n                                            <tr>\n                                                <td>{product.barcode}</td>\n                                                <td>{product.name}</td>\n                                                <td>${product.price}</td>\n                                                <td>{product.stock}</td>\n                                                <td><button className=\"button is-info is-outlined is-small\"><Link to={'products/detail/'+product._id}>Details</Link></button></td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className='column'>\n                        <ProductAdd user={props.loggedInUser} getData={getAllProducts} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    else{\n        return (\n            <div className='container'>\n                <div className='columns'>\n                    <div className='column'>\n                        <table className='table is-striped is-fullwidth'>\n                            <thead>\n                                <tr>\n                                    <th>Barcode</th>\n                                    <th>Name</th>\n                                    <th>Price</th>\n                                    <th>Stock</th>\n                                    <th colSpan='2'>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    listOfProducts.map(product => {\n                                        return(\n                                            <tr>\n                                                <td>{product.barcode}</td>\n                                                <td>{product.name}</td>\n                                                <td>${product.price}</td>\n                                                <td>{product.stock}</td>\n                                                <td><button className=\"button is-info is-outlined is-small\"><Link to={'products/detail/'+product._id}>Details</Link></button></td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProductList;","import React,{useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {useParams, Link, useHistory} from 'react-router-dom'\nimport 'bulma/css/bulma.css';\nimport Swal from 'sweetalert2'\n\nconst ProductDetail = () =>{\n\n    const {id} = useParams();\n    const history = useHistory();\n\n    const [singleProductState, updateSingleProductState] = useState({\n        barcode:'',\n        name: '',\n        price:'',\n        stock:''\n    });\n\n    useEffect(() => {\n        getSingleProduct()\n    },[]);\n\n    const getSingleProduct = () => {\n        axios.get(`${process.env.REACT_APP_API_URL}/products/detail/${id}`, {withCredentials:true})\n        .then(response => {\n            updateSingleProductState(response.data)\n        })\n        .catch(err => console.log(err))\n    }\n\n    const deleteConfirm = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                deleteProduct()\n                Swal.fire(\n                'Deleted!',\n                'Your product has been deleted.',\n                'success'\n              )\n            }\n        })\n    }\n\n    const deleteProduct = () => {\n        axios.delete(`${process.env.REACT_APP_API_URL}/products/detail/${id}`, {withCredentials:true})\n        .then(() => {\n            history.push('/products')\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n    \n    return (\n        <div className='container'>\n            <div className='card'>\n                <div className='card-content'>\n                    <p className='title is-2'>{singleProductState.name}</p>\n                    <p className='subtitle is-2'>{singleProductState.barcode}</p>\n                    <p className='title is-3'>${singleProductState.price}</p>\n                    <p className='subtitle is-3'>Stock: {singleProductState.stock} units</p>\n                </div>\n                <footer class=\"card-footer\">\n                    <button  className=\"card-footer-item button is-link is-outlined\"><Link to={'/products/update/'+id}>Edit</Link></button>\n                    <button onClick={deleteConfirm}  className=\"card-footer-item button is-danger is-outlined\" >Delete</button>\n                </footer>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductDetail;","import React, {useState, useEffect} from 'react';\nimport {useParams, useHistory} from 'react-router-dom'\nimport 'bulma/css/bulma.css';\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form'\nimport Swal from 'sweetalert2'\n\n\nconst ProductUpdate = () =>{\n\n    const {id} = useParams();\n    const history = useHistory();\n    const { register,errors, handleSubmit } = useForm()\n\n    const [formState, updateFormState] = useState({\n        barcode: \"\",\n        name:\"\",\n        price: \"\",\n        stock:\"\"\n    });\n\n    useEffect(() => {\n        getSingleProduct()\n    },[]);\n\n    const getSingleProduct = () => {\n        axios.get(`${process.env.REACT_APP_API_URL}/products/detail/${id}`, {withCredentials:true})\n        .then( response => {\n            updateFormState(response.data)\n        })\n        .catch(err => console.log(err))\n    }\n\n    // const handleChange = (event) => {  \n    //     const { name, defaultValue } = event.target;\n    //     updateFormState(Object.assign({}, formState, {[name]: defaultValue}))\n    // }\n\n    const onSubmit = data => {\n        // event.preventDefault();\n        axios.put(`${process.env.REACT_APP_API_URL}/products/detail/${id}`,data, {withCredentials:true})\n        .then(() => {\n            Swal.fire({\n                title:'Product updated',\n                icon:'success'\n            })\n            .then((result) => {\n                if (result.value) {\n                    history.push(`/products/detail/${id}`)\n                }\n              })\n        })\n        .catch(err => console.log(err))\n    }\n\n    return(\n\n        <div className='container'>\n            <form onSubmit={handleSubmit(onSubmit)} className='box'>\n                <div className=\"field\">\n                    <label className=\"label\">Barcode</label>\n                    <div class=\"control\">\n                        <input className=\"input\" \n                        name='barcode' \n                        type=\"text\" \n                        defaultValue={formState.barcode} \n                        // onChange={e => handleChange(e)}\n                        ref={register({required:true})}\n                        />\n                        {errors.barcode && <p className='error-form'>A product barcode is required</p>}\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Name</label>\n                    <div className=\"control\">\n                        <input className=\"input\" \n                        name='name' \n                        type=\"text\" \n                        defaultValue={formState.name} \n                        // onChange={e => handleChange(e)} \n                        ref={register({required:true})}\n                        />\n                        {errors.name && <p className='error-form'>A product name is required</p>}\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Price</label>\n                    <div className=\"control\">\n                        <input className=\"input\" \n                        name='price' \n                        type=\"text\" \n                        defaultValue={formState.price} \n                        // onChange={e => handleChange(e)}\n                        ref={register({required:true, pattern:/[0-9]/})}\n                        />\n                        {errors.price?.type === \"required\" && <p className='error-form'>A price quantity is required</p>}\n                        {errors.price?.type === \"pattern\" && <p className='error-form'>Must be a number</p>}\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Stock</label>\n                    <div className=\"control\">\n                        <input className=\"input\" \n                        name='stock' \n                        type=\"text\" \n                        defaultValue={formState.stock} \n                        // onChange={e => handleChange(e)}\n                        ref={register({required:true,pattern:/[0-9]/})}\n                        />\n                        {errors.stock?.type === \"required\" && <p className='error-form'>A stock quantity is required</p>}\n                        {errors.stock?.type === \"pattern\" && <p className='error-form'>Must be a number</p>}\n                    </div>\n                </div>\n\n                <div class=\"control\">\n                    <button type='submit' className=\"button is-primary\">Update product</button>\n                </div>\n\n            </form>\n    \n        </div>\n    )\n}\n\nexport default ProductUpdate;","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport 'bulma/css/bulma.css';\nimport Swal from 'sweetalert2'\n\nconst SaleSearch = props => {\n\n    const [searchState, updateSearchState] = useState({\n        search:'',\n    });\n\n    const [productList, setProductList] =useState([]);\n\n    const [saleList, updateSalesList] = useState([]);\n\n    const [total, updateTotal] = useState(0);\n    \n    const getAllProducts = () => {\n        axios.get(`${process.env.REACT_APP_API_URL}/products`, {withCredentials:true})\n        .then(res => {\n            setProductList(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n    useEffect(() => {\n        getAllProducts();\n    },[])\n\n    const handleChange = (event) => {  \n        const { name, value } = event.target;\n        updateSearchState(Object.assign({}, searchState, {[name]: value}))\n    }\n\n    const handleFormSubmit = (event) => {\n        \n        event.preventDefault();\n\n        const filteredProduct = productList.filter(product =>{\n            return product.barcode === searchState.search\n        })\n\n        updateSearchState({\n            search:''\n        })\n\n        if(!filteredProduct[0]){\n            Swal.fire({\n                title: \"Ups!\",\n                text:'Enter a valid barcode',\n                icon: 'warning'\n            })\n        }\n        else {\n\n            const productArray = saleList.filter(ele=>{\n                return ele._id === filteredProduct[0]._id;\n            })\n\n            if(productArray.length >0){\n                const newList = saleList.map(ele=>{\n                    if (ele._id === filteredProduct[0]._id) {\n                        ele.quantity++;\n                        ele.subtotal = ele.quantity * ele.price;\n                        ele.newStock = ele.stock-ele.quantity\n                        return ele;\n                    } else {\n                        return ele;\n                    }\n                })\n                updateSalesList(newList)\n            } else {\n                filteredProduct[0].quantity=1;  \n                filteredProduct[0].subtotal=filteredProduct[0].price;\n                filteredProduct[0].newStock = filteredProduct[0].stock - filteredProduct[0].quantity;  \n                updateSalesList([filteredProduct[0],...saleList])\n            }\n            \n        }\n    }\n\n    const calculateTotal = () => {\n        let sum =0;\n        saleList.forEach(ele => {\n            sum = sum + ele.subtotal\n        })\n        updateTotal(sum)\n    }\n\n    useEffect(() => {\n        calculateTotal()\n    });\n\n    const checkout = () => {\n        let saleObj = new Object()\n        saleObj.sale=saleList\n        saleObj.total=total\n        saleObj.salesMan=props.loggedInUser._id\n        saleObj.store=props.loggedInUser.store\n\n\n        axios.post('http://localhost:5000/api/checkout', saleObj, {withCredentials:true})\n        .then( ()=> {\n            updateSalesList([])\n        })\n        .catch(err => console.log(err)) \n    }\n\n    return(\n        <div className='hero'>\n            <div class='hero-body'>\n                <div className='container'>\n                    <div className='tile is-ancestor'>\n                        <div className='tile is-parent' id='sale-table'>\n                            <div className='tile is-child'>\n                                <table className='table is-fullwidth'>\n                                    <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Price</th>\n                                            <th>Stock</th>\n                                            <th>Quantity</th>\n                                            <th>Subtotal</th>\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {saleList.map(product => {\n                                            return (\n                                                <tr key={product._id}>\n                                                    <td>{product.name}</td>\n                                                    <td>${product.price}</td>\n                                                    <td>{product.newStock}</td>\n                                                    <td>\n                                                        <button className='button is-primary is-light is-small' >\n                                                            -\n                                                        </button>\n                                                        {product.quantity}\n                                                        <button className='button is-primary is-light is-small' >\n                                                            +\n                                                        </button>\n                                                    </td>\n                                                    <td>${product.subtotal}</td>\n                                                    <td><button className='button is-danger is-small'>Delete</button></td>\n                                                </tr>\n                                            )\n                                        })}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        \n                        <div className='tile is-parent is-4 is-vertical'>\n                            <div className='tile is-child'>\n                                <form onSubmit={handleFormSubmit}>\n                                    <div className=\"field has-addons\">\n                                        <div className=\"control\">\n                                        <input className='input' name='search' value={searchState.search} onChange={e => handleChange(e)} placeholder='Barcode here' />\n                                        </div>\n                                        <div className=\"control\">\n                                            <button type='submit'class=\"button is-info\">Search</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                            <div className='tile is-child box'>\n                                <p className='title is-1'>Total: ${total}</p>\n                                <button className='button is-primary' onClick={checkout}>Checkout</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n    )\n}\n\nexport default SaleSearch;","import React, { useState } from 'react';\nimport AuthService from './auth-services';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport Swal from 'sweetalert2'\n\n\nconst Signup = props => {\n\n\n  // const [state, setState] = useState({\n  //      name: '', \n  //      lastname: '', \n  //      store: '', \n  //      username: '',\n  //      password: '' \n  // })\n  const service = new AuthService();\n  const history = useHistory()\n  const { register,errors, handleSubmit } = useForm()\n\n  const onSubmit = (data) => {\n    // event.preventDefault();\n    const name = data.name;\n    const lastname = data.lastname;\n    const store = data.store;\n    const username = data.username;\n    const password = data.password;\n  \n    service.signup(name, lastname, store, username, password)\n    .then( response => {\n        // setState({\n        //     name: \"\", \n        //     lastname: \"\",\n        //     store: \"\",\n        //     username: \"\",\n        //     password: \"\",\n        // });\n        props.getUser(response)\n    })\n    .then(() => history.push('/dashboard'))\n    .catch( error => {\n      console.log(error)\n      if(error.response.status===401){\n        Swal.fire({\n          title: \"Error!\",\n          text: 'Email already asociated with another account',\n          icon: 'warning',\n          confirmButtonText: 'Try another one'\n        })\n      }\n      else{\n        Swal.fire({\n          title: \"Error!\",\n          text: 'Something went wrong',\n          icon: 'error',\n          confirmButtonText: 'Try again'\n        })\n      }\n    } )\n  }\n  \n  // const handleChange = (event) => {  \n  //   const { name, value } = event.target;\n  //   setState(Object.assign({}, state, {[name]: value}))\n  // }\n      \n  \n  return(\n    <section className='hero'>\n      <div className='hero-body'>\n        <div className='container'>\n          <div className='columns is-centered'>\n            <div className='column is-5-tablet is-4-desktop is-3-widescreen'>\n\n              <form onSubmit={handleSubmit(onSubmit)} className='box'>\n                <div className=\"field\">\n                  <label className=\"label\">Name</label>\n                  <div className=\"control\">\n                    <input className=\"input\" \n                    type=\"text\" \n                    name=\"name\" \n                    /* value={state.name} onChange={ e => handleChange(e)} */ \n                    placeholder='Frodo' \n                    ref={register({required:true})}/>\n                    {errors.name && <p className='error-form'>A name is required</p>}\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">Lastname</label>\n                  <div className=\"control\">\n                    <input className=\"input\" \n                    type=\"text\" \n                    name=\"lastname\" \n                    /* value={state.lastname} onChange={ e => handleChange(e)} */ \n                    placeholder='Baggins' \n                    ref={register({required:true})}/>\n                    {errors.lastname && <p className='error-form'>A lastname is required</p>}\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">Store name</label>\n                  <div className=\"control\">\n                    <input className=\"input\" \n                    type=\"text\" \n                    name=\"store\" \n                    /* value={state.store} onChange={ e => handleChange(e)} */ \n                    placeholder='The Green Dragon' \n                    ref={register({required:true})}/>\n                    {errors.store && <p className='error-form'>A store name is required</p>}\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">Email</label>\n                  <div className=\"control\">\n                    <input className=\"input\" \n                    type=\"text\" \n                    name=\"username\" \n                    /* value={state.username} onChange={ e => handleChange(e)} */ \n                    placeholder='example@mail.com' \n                    ref={register({\n                      required:true,\n                      pattern:/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n                  })}\n                    />\n                    {errors.username?.type === \"required\" && <p className='error-form'>An email is required</p>}\n                    {errors.username?.type === \"pattern\" && <p className='error-form'>That's not a valid email</p>}\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">Password</label>\n                  <div className=\"control\">\n                    <input className=\"input\" \n                    type=\"password\" \n                    name=\"password\" /* value={state.password} onChange={ e => handleChange(e)} */ \n                    placeholder='Must be 8 or more characters' \n                    ref={register({required:true,minLength:8})}/>\n                    {errors.password?.type === \"required\" && <p className='error-form'>A password is required</p>}\n                    {errors.password?.type === \"minLength\" && <p className='error-form'>Must be 8 characters at least</p>}\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <button className='button is-link' type=\"submit\">Signup</button>\n                  </div>\n                </div>\n\n                <div className='field'>\n                  <div className='control'>\n                    <p>Already have an account? \n                        <Link to={\"/login\"}> Login</Link>\n                    </p>\n                  </div>\n                </div>\n\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n  \n}\n\nexport default Signup;","import React, { useState } from 'react';\nimport AuthService from './auth-services';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport Swal from 'sweetalert2'\n\n\nconst Login = props => {\n\n    // const [state, setState] = useState({ username: '', password: '' })\n    const service = new AuthService();\n    const history = useHistory()\n    const { register,errors, handleSubmit } = useForm()\n  \n\n  const onSubmit = (data) => {\n    // event.preventDefault();\n    const username = data.username;\n    const password = data.password;\n    service.login(username, password)\n    .then( response => {\n        // setState({ username: \"\", password: \"\" });\n        props.getUser(response)\n    })\n    .then(() => history.push('/dashboard'))\n    .catch( error => {\n      console.log(error)\n      Swal.fire({\n        title: \"Can't login!\",\n        text: 'Email or password incorrect',\n        icon: 'error',\n        confirmButtonText: 'Try again'\n      })\n    } )\n  }\n    \n  // const handleChange = (event) => {  \n  //   const { name, value } = event.target;\n  //   setState(Object.assign({}, state, {[name]: value}))\n  // }\n    \n  return(\n    <section className='hero'>\n      <div className='hero-body'>\n        <div className='container'>\n        <div className='columns is-centered'>\n          <div className='column is-5-tablet is-4-desktop is-3-widescreen'>\n            \n            <form onSubmit={handleSubmit(onSubmit)} className='box'>\n              <div className=\"field\">\n                <label className=\"label\">Email</label>\n                <div className=\"control\">\n                  <input \n                    className=\"input\" \n                    type=\"text\" \n                    name=\"username\" \n                    // value={state.username} \n                    // onChange={ e => handleChange(e)} \n                    placeholder='example@mail.com'\n                    ref={register({\n                      required:true,\n                      pattern:/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n                  })}\n                  />\n                  {errors.username?.type === \"required\" && <p className='error-form'>Email is required</p>}\n                  {errors.username?.type === \"pattern\" && <p className='error-form'>That's not a valid email</p>}\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\">Password</label>\n                <div className=\"control\">\n                  <input \n                    className=\"input\" \n                    type=\"password\" \n                    name=\"password\" \n                    // value={state.password} \n                    // onChange={ e => handleChange(e)} \n                    placeholder='Your password here'\n                    ref={register({required:true})}\n                  />\n                  {errors.password && <p className='error-form'>Password is required</p>}\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <div className=\"control\">\n                  <button className='button is-link is-light' type=\"submit\">Login</button>\n                </div>\n              </div>\n\n              <div className='field'>\n                <div className='control'>\n                  <p>Don't have an account? \n                      <Link to={\"/signup\"}> Signup</Link>\n                  </p>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      </div>\n    </section>\n\n   \n\n\n    \n  )\n  \n}\n\nexport default Login;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst protectedRoute  = ({component: Component, user, ...rest}) => {\n  console.log({component: Component, user, ...rest})\n    return (\n      <Route\n        {...rest}\n        render={ props  => {\n            if(user){\n              return <Component {...props} loggedInUser={user}/>\n            } else {\n              return <Redirect to={{pathname: '/', state: {from: props.location}}} />\n            }\n          }\n        }\n      />\n    )\n}\nexport default protectedRoute;","import React from 'react'\n\nconst Dashboard = props => {\n    return(\n        <div className='container'>\n            <div class=\"card\">\n                <div class=\"card-content\">\n                    <div class=\"media\">\n                    <div class=\"media-left\">\n                        <figure class=\"image is-48x48\">\n                        <img src=\"https://bulma.io/images/placeholders/96x96.png\" alt=\"Placeholder image\"/>\n                        </figure>\n                    </div>\n                    <div class=\"media-content\">\n                        <p class=\"title is-4\">{props.loggedInUser.name} {props.loggedInUser.lastname}</p>\n                        <p class=\"subtitle is-6\">{props.loggedInUser.role==='admin'?'Administrator':'User'}</p>\n                    </div>\n                    </div>\n\n                    <div class=\"content\">\n                    <p class=\"title is-5\">{props.loggedInUser.store}</p>\n                    <p class=\"subtitle is-6\">Email: {props.loggedInUser.username}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard;","import React, {useState} from 'react'\nimport axios from 'axios';\nimport 'bulma/css/bulma.css';\nimport { useForm } from 'react-hook-form'\nimport Swal from 'sweetalert2'\n\n\n\nconst UserAdd = props => {\n\n    // const [formState, updateFormState] = useState({\n    //     name:'',\n    //     lastname: '',\n    //     store:props.user.store,\n    //     username: '',\n    //     password: '',\n    //     role:''\n    // })\n\n    // const handleChange = (event) => {  \n    //     const { name, value } = event.target;\n    //     updateFormState(Object.assign({}, formState, {[name]: value}))\n    // }\n\n    const { register,errors, handleSubmit } = useForm()\n\n    const onSubmit = data => {\n        // event.preventDefault();\n        data.store=props.user.store\n        axios.post(`${process.env.REACT_APP_API_URL}/users/add`,data, {withCredentials:true})\n        .then( ()=>{\n            props.getData();\n            // updateFormState({\n            //     name:'',\n            //     lastname: '',\n            //     store:props.user.store,\n            //     username: '',\n            //     password: '',\n            //     role:''\n            // })\n            Swal.fire({\n                title: \"User Created!\",\n                icon: 'success',\n            })\n            document.getElementById('user-add-form').reset()\n        })\n        .catch(err => {\n            console.log(err)\n            if(err.response.status===401){\n                Swal.fire({\n                    title: \"Wow!\",\n                    text: 'Email already asociated with another account',\n                    icon: 'warning',\n                    confirmButtonText: 'Try another one'\n                })\n            }\n            else{\n                Swal.fire({\n                    title: \"Error!\",\n                    text: 'Something went wrong',\n                    icon: 'error',\n                    confirmButtonText: 'Try again'\n                })\n            }\n        })\n    }\n\n    return(\n        <form id='user-add-form' onSubmit={handleSubmit(onSubmit)} className='box'>\n            <div className=\"field\">\n                <label className=\"label\">Name</label>\n                <div class=\"control\">\n                    <input className=\"input\" \n                    name='name' \n                    type=\"text\" \n                    // value={formState.name}\n                    // onChange={e => handleChange(e)} \n                    ref={register({required:true})}\n                    />\n                    {errors.name && <p className='error-form'>A name is required</p>}\n                </div>\n            </div>\n\n            <div className=\"field\">\n                <label className=\"label\">Lastname</label>\n                <div className=\"control\">\n                    <input className=\"input\" \n                    name='lastname' type=\"text\" \n                    // value={formState.lastname} \n                    // onChange={e => handleChange(e)}\n                    ref={register({required:true})}\n                    />\n                    {errors.lastname && <p className='error-form'>A lastname is required</p>}\n                </div>\n            </div>\n\n            <div className=\"field\">\n                <label className=\"label\">Email</label>\n                <div className=\"control\">\n                    <input className=\"input\" \n                    name='username' \n                    type=\"text\" \n                    // value={formState.username} \n                    // onChange={e => handleChange(e)}\n                    ref={register({\n                        required:true,\n                        pattern:/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n                    })}\n                    />\n                    {errors.username?.type === \"required\" && <p className='error-form'>An email is required</p>}\n                    {errors.username?.type === \"pattern\" && <p className='error-form'>That's not a valid email</p>}\n\n                </div>\n            </div>\n\n            <div className=\"field\">\n                <label className=\"label\">Password</label>\n                <div className=\"control\">\n                    <input className=\"input\" \n                    name='password' \n                    type=\"password\" \n                    // value={formState.password} \n                    // onChange={e => handleChange(e)}\n                    ref={register({\n                        required:true,\n                        minLength:8\n                    })}\n                    />\n                    {errors.password?.type === \"required\" && <p className='error-form'>An password is required</p>}\n                    {errors.password?.type === \"minLength\" && <p className='error-form'>Must be 8 characters at least</p>}\n                </div>\n            </div>\n\n            <div class=\"field\">\n                <label class=\"label\">Role</label>\n                <div class=\"control\">\n                    <div class=\"select\">\n                    <select name='role' \n                    // onChange={e => handleChange(e)}\n                    ref={register({required:true})}\n                    >\n                        <option value=''>Select an option</option>\n                        <option value='user'>User</option>\n                        <option value='admin'>Admin</option>\n                    </select>\n                    {errors.role && <p className='error-form'>Please select a role</p>}\n                    </div>\n                </div>\n            </div>\n\n            <div className='field'>\n            <div class=\"control\">\n                <button type='submit' className=\"button is-primary\">Add New</button>\n            </div>\n            </div>\n\n        </form>\n\n        \n    )\n\n}\n\nexport default UserAdd;","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport 'bulma/css/bulma.css';\nimport UserAdd from './UserAdd'\n\nconst UserList = props =>{\n\n    const [listOfUsers, updateList] = useState([]);\n\n    const getAllUsers = () => {\n        axios.get(`${process.env.REACT_APP_API_URL}/users`, {withCredentials:true})\n        .then(response => {\n            updateList(response.data)\n        })\n        .catch(err => console.log(err))\n    }\n\n    useEffect( () => {\n        getAllUsers();\n    },[])\n\n    return (\n        <div className='container'>\n            <div className='columns'>\n                <div className='column' id='user-table'>\n                    <table className='table is-striped is-fullwidth'>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Role</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                listOfUsers.map(user => {\n                                    return(\n                                        <tr key={user._id}>\n                                            <td>{user.name}</td>\n                                            <td>{user.role==='admin'?'Administrator':'User'}</td>\n                                            <td>\n                                                <button className=\"button is-info is-outlined is-small\">\n                                                    <Link to={'users/detail/'+user._id}>Details</Link>\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                <div className='column'>\n                    <UserAdd user={props.loggedInUser} getData={getAllUsers} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserList;","import React,{useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {useParams, Link, useHistory} from 'react-router-dom'\nimport 'bulma/css/bulma.css';\nimport Swal from 'sweetalert2'\n\nconst UserDetail = () =>{\n\n    const {id} = useParams();\n    const history = useHistory();\n\n    const [singleUser, updatesingleUser] = useState([{\n        name:'',\n        lastname: '',\n        store:'',\n        username: '',\n        password: '',\n        role:''\n    }]);\n\n    useEffect(() => {\n        getSingleUser()\n    },[]);\n\n    const getSingleUser = () => {\n        axios.get(`${process.env.REACT_APP_API_URL}/users/detail/${id}`, {withCredentials:true})\n        .then(response => {\n            updatesingleUser(response.data)\n        })\n        .catch(err => console.log(err))\n    }\n\n    const deleteUser = () => {\n        axios.delete(`${process.env.REACT_APP_API_URL}/users/detail/${id}`, {withCredentials:true})\n        .then(() => {\n            history.push('/users')\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n\n    const deleteConfirm = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.value) {\n                deleteUser()\n                Swal.fire(\n                'Deleted!',\n                'The user has been deleted.',\n                'success'\n              )\n            }\n        })\n    }\n    \n    return (\n        <div className='container'>\n            <div className='card'>\n                <div className='card-content'>\n                    <p className='title is-'>{singleUser.store}</p>\n                    <p className='title is-2'>{singleUser.name}</p>\n                    <p className='subtitle is-2'>{singleUser.lastname}</p>\n                    <p className='title is-3'>{singleUser.username}</p>\n                    <p className='subtitle is-3'>{singleUser.role==='admin'?'Administrator':'User'}</p>\n                </div>\n                <footer class=\"card-footer\">\n                    <button  className=\"card-footer-item button is-link is-outlined\"><Link to={'/users/update/'+id}>Edit</Link></button>\n                    <button onClick={deleteConfirm}  className=\"card-footer-item button is-danger is-outlined\" >Delete</button>\n                </footer>\n            </div>\n        </div>\n    )\n}\n\nexport default UserDetail;","import React, {useState, useEffect} from 'react';\nimport {useParams, useHistory} from 'react-router-dom'\nimport 'bulma/css/bulma.css';\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form'\nimport Swal from 'sweetalert2'\n\n\nconst UserUpdate = () =>{\n\n    const {id} = useParams();\n    const history = useHistory();\n    const { register,errors, handleSubmit } = useForm()\n\n    const [formState, updateFormState] = useState({\n        name:'',\n        lastname: '',\n        username: '',\n        password: '',\n        role:''\n    });\n\n    useEffect(() => {\n        getSingleUser()\n    },[]);\n\n    const getSingleUser = () => {\n        axios.get(`${process.env.REACT_APP_API_URL}/users/detail/${id}`, {withCredentials:true})\n        .then( response => {\n            updateFormState(response.data)\n        })\n        .catch(err => console.log(err))\n    }\n\n    // const handleChange = (event) => {  \n    //     const { name, defaultdefaultValue } = event.target;\n    //     updateFormState(Object.assign({}, formState, {[name]: defaultdefaultValue}))\n    // }\n\n    const onSubmit = data => {\n        // event.preventDefault();\n        axios.put(`${process.env.REACT_APP_API_URL}/users/detail/${id}`,data, {withCredentials:true})\n        .then(() => {\n            Swal.fire({\n                title:'User updated',\n                icon:'success'\n            })\n            .then((result) => {\n                if (result.value) {\n                    history.push(`/users/detail/${id}`)\n                }\n              })\n        })\n        .catch(err => console.log(err))\n    }\n\n    return(\n        <div className='container'>\n            <form id='user-add-form' onSubmit={handleSubmit(onSubmit)} className='box'>\n                <div className=\"field\">\n                    <label className=\"label\">Name</label>\n                    <div class=\"control\">\n                        <input className=\"input\" \n                        name='name' \n                        type=\"text\" \n                        defaultValue={formState.name}\n                        // onChange={e => handleChange(e)} \n                        ref={register({required:true})}\n                        />\n                        {errors.name && <p className='error-form'>A name is required</p>}\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Lastname</label>\n                    <div className=\"control\">\n                        <input className=\"input\" \n                        name='lastname' type=\"text\" \n                        defaultValue={formState.lastname} \n                        // onChange={e => handleChange(e)}\n                        ref={register({required:true})}\n                        />\n                        {errors.lastname && <p className='error-form'>A lastname is required</p>}\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Email</label>\n                    <div className=\"control\">\n                        <input className=\"input\" \n                        name='username' \n                        type=\"text\" \n                        defaultValue={formState.username} \n                        // onChange={e => handleChange(e)}\n                        ref={register({\n                            required:true,\n                            pattern:/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n                        })}\n                        />\n                        {errors.username?.type === \"required\" && <p className='error-form'>An email is required</p>}\n                        {errors.username?.type === \"pattern\" && <p className='error-form'>That's not a valid email</p>}\n\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Password</label>\n                    <div className=\"control\">\n                        <input className=\"input\" \n                        name='password' \n                        type=\"password\" \n                        defaultValue={formState.password} \n                        // onChange={e => handleChange(e)}\n                        ref={register({\n                            required:true,\n                            minLength:8\n                        })}\n                        />\n                        {errors.password?.type === \"required\" && <p className='error-form'>An password is required</p>}\n                        {errors.password?.type === \"minLength\" && <p className='error-form'>Must be 8 characters at least</p>}\n                    </div>\n                </div>\n\n                <div class=\"field\">\n                    <label class=\"label\">Role</label>\n                    <div class=\"control\">\n                        <div class=\"select\">\n                        <select name='role' \n                        // onChange={e => handleChange(e)}\n                        ref={register({required:true})}\n                        >\n                            <option value=''>Select an option</option>\n                            <option value='user'>User</option>\n                            <option value='admin'>Admin</option>\n                        </select>\n                        <span>{errors.role && <p className='error-form'>Please select a role</p>}</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='field'>\n                    <div class=\"control\">\n                        <button type='submit' className=\"button is-primary\">Update User</button>\n                    </div>\n                </div>\n\n            </form>\n        </div>\n    )\n}\n\nexport default UserUpdate;","import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport 'bulma/css/bulma.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst Reports = props => {\n\n    const [sales, updateSales] = useState([]);\n\n    const [startDate, setStartDate] = useState(new Date());\n\n    const [totalDay, updateTotal] = useState(0);\n\n    const getAllSales = () => {\n        axios.get(`${process.env.REACT_APP_API_URL}/sales`, {withCredentials:true})\n        .then(response => {\n            updateSales(response.data)\n        })\n        .catch(err => console.log(err))\n    }\n\n    useEffect(() => {\n        getAllSales()\n    }, [])\n\n\n    const changedDates = sales.map(sale => {\n        sale.convertedTime = new Date(sale.createdAt).setHours(0,0,0,0)\n        return sale\n    })\n\n    const salesFiltered = changedDates.filter(sale => {\n        return sale.convertedTime===startDate.setHours(0,0,0,0)\n    })  \n\n    const calculateTotal = () => {\n        let sum =0;\n        salesFiltered.forEach(ele => {\n            sum = sum + ele.total\n        })\n        updateTotal(sum)\n    }\n\n    useEffect(() => {\n        calculateTotal()\n    });\n    \n    return(\n        <div className='container'>\n            <div className=\"columns\">\n                <div className=\"column\" >\n                    <p className='title is-2'>All sales</p>\n                    <div className='container' id='reports-sale-column'>\n                    {\n                        sales.map(sale => {\n                            return(\n                                <div className='card'>\n                                    <div className='card-content'>\n                                        <p className='subtitle is-3'>Sale {sale._id}</p>\n                                        <table className='table is-striped'>\n                                            <thead>\n                                                <tr>\n                                                    <th>Barcode</th>\n                                                    <th>Name</th>\n                                                    <th>Price</th>\n                                                    <th>Quantity</th>\n                                                    <th>Subtotal</th>\n                                                </tr>\n                                            </thead>\n\n                                                {sale.sale.map(product => {\n                                                    return(\n                                                        <tbody>\n                                                            <td>{product.barcode}</td>\n                                                            <td>{product.name}</td>\n                                                            <td>${product.price}</td>\n                                                            <td>{product.quantity}</td>\n                                                            <td>${product.subtotal}</td>\n                                                        </tbody>\n                                                    )\n                                                })}\n                                            \n                                            <p>Total ${sale.total}</p>\n                                            <p>Made by {sale.salesMan.name}</p>\n                                            <p> {sale.createdAt}</p>\n                                        </table>\n                                    </div>\n                                </div>\n                            )\n                        })\n                        \n                    }\n                    </div>\n                </div>\n\n\n                <div className=\"column\">\n                    <p className='title is-2'>Sales by date</p>\n                    <p className='title is-4'>Pick a date</p>\n                    <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n                        <div id='reports-table'>\n                        <table className='table is-striped is-fullwidth'>\n                            <thead>\n                                <tr>\n                                    <th>Sale ID</th>\n                                    <th>Total Sale</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n\n                                {salesFiltered.map(sale => {\n                                    return(\n                                        <tr key={sale._id}>\n                                            <td>{sale._id}</td>\n                                            <td>${sale.total}</td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                        </div>\n                        <p className='title is-3'>Day's Sales: ${totalDay}</p>\n\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Reports;","import React from 'react'\nimport 'bulma/css/bulma.css';\n\nconst Footer = props => {\n    return(\n        <footer id='general-footer'>\n            <div class=\"content has-text-centered\">\n                <p>\n                <strong>Kwik-E POS</strong> by <a href=\"https://github.com/gusocb\">Gustavo Cruz</a>. Ironhack 2020.\n                </p>\n            </div>\n        </footer>\n        )\n}\n\nexport default Footer;","import React, {useState} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\n\n\n//Components\nimport Home from './components/Home'\nimport NavBar from './components/navigation/NavBar'\nimport ProductList from './components/Products/ProductList'\nimport ProductDetail from './components/Products/ProductDetail'\nimport ProductUpdate from './components/Products/ProductUpdate'\nimport SalesSearch from './components/sales/SalesSearch'\nimport Signup from './components/auth/Signup';\nimport AuthService from './components/auth/auth-services';\nimport Login from './components/auth/Login';\nimport ProtectedRoute from './components/auth/protected-route';\nimport Dashboard from './components/dashboard/Dashboard'\nimport UserList from './components/users/UserList'\nimport UserDetail from './components/users/UserDetail'\nimport UserUpdate from './components/users/UserUpdate'\nimport Reports from './components/reports/Reports'\nimport Footer from './components/navigation/Footer'\n\n\n\n\nfunction App() {\n\n  const [loggedInUser,setLoggedInUser] = useState(null);\n\n  const service = new AuthService();\n\n  const fetchUser = () => {\n    if(loggedInUser === null) {\n      service.loggedin()\n      .then(res => {\n        setLoggedInUser(res)\n      })\n      .catch( err => {\n        setLoggedInUser(false)\n      })\n    }\n  }\n\n  \n  const getTheUser = (userObj) => {\n    setLoggedInUser(userObj)\n  }\n  \n  fetchUser()\n  \n  if(loggedInUser){\n    return (\n      <Router>\n            <NavBar getUser={getTheUser} userInSession={loggedInUser}/>\n            <Switch>\n              <Route path='/' exact component={Home} />\n              <ProtectedRoute user={loggedInUser} path='/products' exact component={ProductList} />\n              <ProtectedRoute user={loggedInUser} path='/products/detail/:id' exact component={ProductDetail} />\n              <ProtectedRoute user={loggedInUser} path='/products/update/:id' exact component={ProductUpdate} />\n              <ProtectedRoute user={loggedInUser} path='/sales' exact component={SalesSearch} />\n              <ProtectedRoute user={loggedInUser} path='/dashboard' exact component={Dashboard} />\n              <ProtectedRoute user={loggedInUser} path='/users' exact component={UserList} />\n              <ProtectedRoute user={loggedInUser} path='/users/detail/:id' exact component={UserDetail} />\n              <ProtectedRoute user={loggedInUser} path='/users/update/:id' exact component={UserUpdate} />\n              <ProtectedRoute user={loggedInUser} path='/reports' exact component={Reports} />\n            </Switch>\n            <Footer/>\n\n      </Router>\n    )\n  }\n  else {\n    return(\n      <Router>\n          <NavBar userInSession={loggedInUser}/>\n          <Switch>\n            <Route exact path=\"/signup\" render={()=><Signup getUser={getTheUser}/>}/>\n            <Route exact path='/login' render={() => <Login getUser={getTheUser}/>}/>\n            <Route path='/' exact component={Home} />\n            <ProtectedRoute user={loggedInUser} path='/products' exact component={ProductList} />\n            <ProtectedRoute user={loggedInUser} path='/products/detail/:id' exact component={ProductDetail} />\n            <ProtectedRoute user={loggedInUser} path='/products/update/:id' exact component={ProductUpdate} />\n            <ProtectedRoute user={loggedInUser} path='/sales' exact component={SalesSearch} />\n            <ProtectedRoute user={loggedInUser} path='/dashboard' exact component={Dashboard} />\n            <ProtectedRoute user={loggedInUser} path='/users' exact component={UserList} />\n            <ProtectedRoute user={loggedInUser} path='/users/detail/:id' exact component={UserDetail} />\n            <ProtectedRoute user={loggedInUser} path='/users/update/:id' exact component={UserUpdate} />\n            <ProtectedRoute user={loggedInUser} path='/reports' exact component={Reports} />\n          </Switch>\n          <Footer/>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}